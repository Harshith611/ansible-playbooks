---
- name: "CIS 4.2.7 | Ensure SSH ClientAliveInterval and ClientAliveCountMax are configured"
  hosts: all
  become: yes
  vars:
    sshd_config_path: "/etc/ssh/sshd_config"
    backup_dir: "/var/backups/ssh_cis"
    checkpoint_file: "/var/log/cis_4.2.7_clientalive_applied.chk"
    client_alive_interval: 15
    client_alive_countmax: 3

  tasks:

    - name: "Check if CIS 4.2.7 has already been applied"
      stat:
        path: "{{ checkpoint_file }}"
      register: checkpoint_stat

    - name: "Create backup directory if not exists"
      file:
        path: "{{ backup_dir }}"
        state: directory
        mode: '0750'

    - name: "Backup sshd_config before modifying"
      copy:
        src: "{{ sshd_config_path }}"
        dest: "{{ backup_dir }}/sshd_config.bak_{{ ansible_date_time.iso8601 }}"
        remote_src: yes
      when: not checkpoint_stat.stat.exists

    - name: "Remove all existing ClientAliveInterval entries"
      lineinfile:
        path: "{{ sshd_config_path }}"
        regexp: '^[\s#]*ClientAliveInterval\s+'
        state: absent
        backrefs: yes

    - name: "Remove all existing ClientAliveCountMax entries"
      lineinfile:
        path: "{{ sshd_config_path }}"
        regexp: '^[\s#]*ClientAliveCountMax\s+'
        state: absent
        backrefs: yes

    - name: "Insert ClientAliveInterval and ClientAliveCountMax before any Include"
      blockinfile:
        path: "{{ sshd_config_path }}"
        block: |
          ClientAliveInterval {{ client_alive_interval }}
          ClientAliveCountMax {{ client_alive_countmax }}
        insertbefore: '^Include'
        marker: "# {mark} CIS 4.2.7 SSH ClientAlive Settings"
        create: no

    - name: "Validate sshd_config before restarting SSH"
      command: sshd -t
      register: sshd_check
      ignore_errors: yes

    - name: "Abort if sshd config test fails"
      fail:
        msg: "sshd config test failed. Check manually. Not restarting SSH!"
      when: sshd_check.rc != 0

    - name: "Restart SSH service"
      service:
        name: sshd
        state: restarted
      when: sshd_check.rc == 0

    - name: "Create checkpoint for CIS 4.2.7"
      file:
        path: "{{ checkpoint_file }}"
        state: touch
        mode: '0600'

    - name: "Success message"
      debug:
        msg: "CIS 4.2.7 enforced: ClientAliveInterval and ClientAliveCountMax configured and SSH restarted."

